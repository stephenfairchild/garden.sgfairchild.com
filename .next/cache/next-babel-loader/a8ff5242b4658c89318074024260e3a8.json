{
  "ast": null,
  "code": "import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"/home/stephen/Apps/next-portfolio/pages/post/[slug].jsx\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"*[_type == \\\"post\\\" && slug.current == $slug][0]{\\n  title,\\n  \\\"name\\\": author->name,\\n  \\\"categories\\\": categories[]->title\\n}\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n// [slug].js\nimport groq from \"groq\";\nimport client from \"../../client\";\n\nvar Post = function Post(props) {\n  var _props$title = props.title,\n      title = _props$title === void 0 ? \"Missing title\" : _props$title,\n      _props$name = props.name,\n      name = _props$name === void 0 ? \"Missing name\" : _props$name,\n      categories = props.categories;\n  return __jsx(\"article\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, title), __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, \"By \", name), categories && __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }\n  }, \"Posted in\", categories.map(function (category) {\n    return __jsx(\"li\", {\n      key: category,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 25\n      }\n    }, category);\n  })));\n};\n\n_c = Post;\nvar query = groq(_templateObject());\n\nPost.getInitialProps = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n    var _context$query$slug, slug;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            // It's important to default the slug so that it doesn't return \"undefined\"\n            _context$query$slug = context.query.slug, slug = _context$query$slug === void 0 ? \"\" : _context$query$slug;\n            _context.next = 3;\n            return client.fetch(query, {\n              slug: slug\n            });\n\n          case 3:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default Post; // [slug].js\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");",
  "map": {
    "version": 3,
    "sources": ["/home/stephen/Apps/next-portfolio/pages/post/[slug].jsx"],
    "names": [
      "groq",
      "client",
      "Post",
      "props",
      "title",
      "name",
      "categories",
      "map",
      "category",
      "query",
      "getInitialProps",
      "context",
      "slug",
      "fetch"
    ],
    "mappings": ";;;;;;;;;;;;;;;;;;;;AAAA;AAEA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,cAAnB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAAAC,KAAK,EAAI;AAAA,qBAKdA,KALc,CAEdC,KAFc;AAAA,MAEdA,KAFc,6BAEN,eAFM;AAAA,oBAKdD,KALc,CAGdE,IAHc;AAAA,MAGdA,IAHc,4BAGP,cAHO;AAAA,MAIdC,UAJc,GAKdH,KALc,CAIdG,UAJc;AAMlB,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKF,KAAL,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAUC,IAAV,CAFJ,EAGKC,UAAU,IACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEKA,UAAU,CAACC,GAAX,CAAe,UAAAC,QAAQ;AAAA,WACpB;AAAI,MAAA,GAAG,EAAEA,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoBA,QAApB,CADoB;AAAA,GAAvB,CAFL,CAJR,CADJ;AAcH,CApBD;;KAAMN,I;AAsBN,IAAMO,KAAK,GAAGT,IAAH,mBAAX;;AAMAE,IAAI,CAACQ,eAAL;AAAA,sEAAuB,iBAAgBC,OAAhB;AAAA;;AAAA;AAAA;AAAA;AAAA;AACnB;AADmB,kCAEGA,OAAO,CAACF,KAFX,CAEXG,IAFW,EAEXA,IAFW,oCAEJ,EAFI;AAAA;AAAA,mBAGNX,MAAM,CAACY,KAAP,CAAaJ,KAAb,EAAoB;AAAEG,cAAAA,IAAI,EAAJA;AAAF,aAApB,CAHM;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAAA;AAAA;AAAA;AAAA;;AAMA,eAAeV,IAAf,C,CAAqB",
    "sourcesContent": [
      "// [slug].js\n\nimport groq from \"groq\";\nimport client from \"../../client\";\n\nconst Post = props => {\n    const {\n        title = \"Missing title\",\n        name = \"Missing name\",\n        categories\n    } = props;\n    return (\n        <article>\n            <h1>{title}</h1>\n            <span>By {name}</span>\n            {categories && (\n                <ul>\n                    Posted in\n                    {categories.map(category => (\n                        <li key={category}>{category}</li>\n                    ))}\n                </ul>\n            )}\n        </article>\n    );\n};\n\nconst query = groq`*[_type == \"post\" && slug.current == $slug][0]{\n  title,\n  \"name\": author->name,\n  \"categories\": categories[]->title\n}`;\n\nPost.getInitialProps = async function (context) {\n    // It's important to default the slug so that it doesn't return \"undefined\"\n    const { slug = \"\" } = context.query;\n    return await client.fetch(query, { slug });\n};\n\nexport default Post; // [slug].js\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
