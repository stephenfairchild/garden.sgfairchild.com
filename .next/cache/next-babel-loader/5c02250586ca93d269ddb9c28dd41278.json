{"ast":null,"code":"var _jsxFileName = \"/home/stephen/Apps/next-portfolio/src/pages/posts/[slug].jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport imageUrlBuilder from \"@sanity/image-url\";\nimport client from \"../../sanity-client\";\nimport getPostBySlug, { getAllPosts } from \"../../content-api\";\nimport moment from \"moment\";\nimport renderBodyContent from \"../../render-body-content\";\n\nfunction urlFor(source) {\n  return imageUrlBuilder(client).image(source);\n}\n\nexport async function getStaticProps(context) {\n  const data = await getPostBySlug(context.params.slug);\n  return {\n    props: data\n  };\n}\nexport async function getStaticPaths() {\n  const posts = await getAllPosts();\n  debugger;\n  console.log(posts);\n  const paths = posts.map(post => ({\n    params: {\n      slug: post.slug.current\n    }\n  }));\n  return {\n    paths,\n    fallback: false\n  };\n}\nexport default function Post(props) {\n  const {\n    title,\n    publishedAt,\n    body = []\n  } = props;\n  return __jsx(React.Fragment, null, __jsx(\"article\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, __jsx(\"h3\", {\n    className: \"font-bold text-gray-500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, moment(publishedAt).format(\"MMMM Do, YYYY\")), __jsx(\"h1\", {\n    className: \"text-4xl font-bold text-gray-800\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, title), __jsx(\"div\", {\n    className: \"text-xl text-gray-700\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, renderBodyContent(body))));\n}","map":{"version":3,"sources":["/home/stephen/Apps/next-portfolio/src/pages/posts/[slug].jsx"],"names":["imageUrlBuilder","client","getPostBySlug","getAllPosts","moment","renderBodyContent","urlFor","source","image","getStaticProps","context","data","params","slug","props","getStaticPaths","posts","console","log","paths","map","post","current","fallback","Post","title","publishedAt","body","format"],"mappings":";;;AAAA,OAAOA,eAAP,MAA4B,mBAA5B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,aAAP,IAAwBC,WAAxB,QAA2C,mBAA3C;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,iBAAP,MAA8B,2BAA9B;;AAEA,SAASC,MAAT,CAAgBC,MAAhB,EAAwB;AACpB,SAAOP,eAAe,CAACC,MAAD,CAAf,CAAwBO,KAAxB,CAA8BD,MAA9B,CAAP;AACH;;AAED,OAAO,eAAeE,cAAf,CAA8BC,OAA9B,EAAuC;AAC1C,QAAMC,IAAI,GAAG,MAAMT,aAAa,CAACQ,OAAO,CAACE,MAAR,CAAeC,IAAhB,CAAhC;AAEA,SAAO;AACHC,IAAAA,KAAK,EAAEH;AADJ,GAAP;AAGH;AAED,OAAO,eAAeI,cAAf,GAAgC;AACnC,QAAMC,KAAK,GAAG,MAAMb,WAAW,EAA/B;AACA;AACAc,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEA,QAAMG,KAAK,GAAGH,KAAK,CAACI,GAAN,CAAUC,IAAI,KAAK;AAC7BT,IAAAA,MAAM,EAAE;AAAEC,MAAAA,IAAI,EAAEQ,IAAI,CAACR,IAAL,CAAUS;AAAlB;AADqB,GAAL,CAAd,CAAd;AAIA,SAAO;AAAEH,IAAAA,KAAF;AAASI,IAAAA,QAAQ,EAAE;AAAnB,GAAP;AACH;AAED,eAAe,SAASC,IAAT,CAAcV,KAAd,EAAqB;AAChC,QAAM;AAAEW,IAAAA,KAAF;AAASC,IAAAA,WAAT;AAAsBC,IAAAA,IAAI,GAAG;AAA7B,MAAoCb,KAA1C;AACA,SACI,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,yBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKV,MAAM,CAACsB,WAAD,CAAN,CAAoBE,MAApB,CAA2B,eAA3B,CADL,CADJ,EAII;AAAI,IAAA,SAAS,EAAC,kCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkDH,KAAlD,CAJJ,EAKI;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKpB,iBAAiB,CAACsB,IAAD,CADtB,CALJ,CADJ,CADJ;AAaH","sourcesContent":["import imageUrlBuilder from \"@sanity/image-url\";\nimport client from \"../../sanity-client\";\nimport getPostBySlug, { getAllPosts } from \"../../content-api\";\nimport moment from \"moment\";\nimport renderBodyContent from \"../../render-body-content\";\n\nfunction urlFor(source) {\n    return imageUrlBuilder(client).image(source);\n}\n\nexport async function getStaticProps(context) {\n    const data = await getPostBySlug(context.params.slug);\n\n    return {\n        props: data\n    };\n}\n\nexport async function getStaticPaths() {\n    const posts = await getAllPosts();\n    debugger;\n    console.log(posts);\n\n    const paths = posts.map(post => ({\n        params: { slug: post.slug.current }\n    }));\n\n    return { paths, fallback: false };\n}\n\nexport default function Post(props) {\n    const { title, publishedAt, body = [] } = props;\n    return (\n        <>\n            <article>\n                <h3 className=\"font-bold text-gray-500\">\n                    {moment(publishedAt).format(\"MMMM Do, YYYY\")}\n                </h3>\n                <h1 className=\"text-4xl font-bold text-gray-800\">{title}</h1>\n                <div className=\"text-xl text-gray-700\">\n                    {renderBodyContent(body)}\n                </div>\n            </article>\n        </>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}