{
  "ast": null,
  "code": "import _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/home/stephen/Apps/next-portfolio/src/render-body-content.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport BlockContent from \"@sanity/block-content-to-react\";\nimport client from \"./sanity-client\";\nexport default function RenderBodyContent(body) {\n  var _this = this;\n\n  var serializers = {\n    list: function list(props) {\n      return __jsx(\"div\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 6,\n          columnNumber: 22\n        }\n      }, props.children);\n    },\n    listItem: function listItem(props) {\n      return __jsx(\"strong\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 7,\n          columnNumber: 26\n        }\n      }, props.children);\n    },\n    types: {\n      image: function image(props) {\n        return __jsx(\"figure\", {\n          className: \"has-text-centered\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 11,\n            columnNumber: 11\n          }\n        }, __jsx(\"img\", {\n          src: urlFor(props.node.asset).width(600).url(),\n          alt: props.node.alt,\n          style: {\n            borderRadius: \"5px\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 12,\n            columnNumber: 13\n          }\n        }), __jsx(\"figcaption\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 13\n          }\n        }, props.node.caption));\n      },\n      block: function block(props) {\n        switch (props.node.style) {\n          case \"h1\":\n            return __jsx(\"h1\", {\n              className: \"\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 24,\n                columnNumber: 22\n              }\n            }, props.children);\n\n          case \"h2\":\n            return __jsx(\"h2\", {\n              className: \"\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 22\n              }\n            }, props.children);\n\n          case \"h3\":\n            return __jsx(\"h3\", {\n              className: \"\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 22\n              }\n            }, props.children);\n\n          case \"h4\":\n            return __jsx(\"h4\", {\n              className: \"\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 22\n              }\n            }, props.children);\n\n          case \"li\":\n            return __jsx(\"h4\", {\n              className: \"\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 22\n              }\n            }, props.children);\n\n          case \"blockquote\":\n            return __jsx(\"blockquote\", {\n              className: \"\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 22\n              }\n            }, props.children);\n\n          case \"normal\":\n            return __jsx(\"p\", {\n              className: \"p-2\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 23\n              }\n            }, props.children);\n\n          default:\n            return __jsx(\"p\", {\n              className: \"\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 22\n              }\n            }, props.children);\n        }\n      }\n    }\n  };\n  return __jsx(BlockContent, _extends({\n    serializers: serializers,\n    blocks: body,\n    imageOptions: {\n      w: 320,\n      h: 240,\n      fit: \"max\"\n    }\n  }, client.config(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }));\n}\n_c = RenderBodyContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"RenderBodyContent\");",
  "map": {
    "version": 3,
    "sources": [
      "/home/stephen/Apps/next-portfolio/src/render-body-content.tsx"
    ],
    "names": [
      "BlockContent",
      "client",
      "RenderBodyContent",
      "body",
      "serializers",
      "list",
      "props",
      "children",
      "listItem",
      "types",
      "image",
      "urlFor",
      "node",
      "asset",
      "width",
      "url",
      "alt",
      "borderRadius",
      "caption",
      "block",
      "style",
      "w",
      "h",
      "fit",
      "config"
    ],
    "mappings": "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",
    "sourcesContent": [
      "import BlockContent from \"@sanity/block-content-to-react\";\nimport client from \"./sanity-client\";\n\nexport default function RenderBodyContent(body) {\n    const serializers = {\n      list: props => <div>{props.children}</div>,\n      listItem: props => <strong>{props.children}</strong>,\n\n      types: {\n        image: props => (\n          <figure className=\"has-text-centered\">\n            <img\n              src={urlFor(props.node.asset).width(600).url()}\n              alt={props.node.alt}\n              style={{ borderRadius: \"5px\" }}\n            />\n\n            <figcaption>{props.node.caption}</figcaption>\n          </figure>\n        ),\n        block(props) {\n          switch (props.node.style) {\n            case \"h1\":\n              return <h1 className=\"\">{props.children}</h1>\n\n            case \"h2\":\n              return <h2 className=\"\">{props.children}</h2>\n\n            case \"h3\":\n              return <h3 className=\"\">{props.children}</h3>\n\n            case \"h4\":\n              return <h4 className=\"\">{props.children}</h4>\n            case \"li\":\n              return <h4 className=\"\">{props.children}</h4>\n\n            case \"blockquote\":\n              return <blockquote className=\"\">{props.children}</blockquote>\n\n            case \"normal\":\n              return  <p className=\"p-2\">{props.children}</p>\n\n            default:\n              return <p className=\"\">{props.children}</p>\n          }\n        },\n      },\n    }\n\n    return (\n        <BlockContent\n            serializers={serializers}\n            blocks={body}\n            imageOptions={{ w: 320, h: 240, fit: \"max\" }}\n            {...client.config()}\n        />\n    )\n}\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
