{
  "ast": null,
  "code": "var _jsxFileName = \"/home/stephen/Apps/next-portfolio/src/pages/posts/[slug].tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport imageUrlBuilder from \"@sanity/image-url\";\nimport client from \"../../sanity-client\";\nimport getPostBySlug from \"../../content-api\";\nimport moment from 'moment';\n\nfunction urlFor(source) {\n  return imageUrlBuilder(client).image(source);\n}\n\nexport async function getServerSideProps(context) {\n  const {\n    slug = \"\"\n  } = context.query;\n  const data = await getPostBySlug(slug);\n  return {\n    props: data\n  };\n}\nexport default function Post(props) {\n  const {\n    title,\n    name,\n    authorImage,\n    publishedAt,\n    body = []\n  } = props;\n  return __jsx(\"article\", {\n    className: \"p-8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, __jsx(\"h3\", {\n    className: \"font-bold text-gray-500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, moment(publishedAt).format('MMMM Do, YYYY')), __jsx(\"h1\", {\n    className: \"text-4xl font-bold text-gray-900\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, title), __jsx(\"div\", {\n    className: \"text-xl text-gray-800\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, renderContent(body), \"/>\"), authorImage && __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, __jsx(\"img\", {\n    className: \"h-12 rounded shadow-xl\",\n    alt: \"The author\",\n    src: urlFor(authorImage).width(100).url(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }), __jsx(\"span\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, \"By \", name)));\n}\n;",
  "map": {
    "version": 3,
    "sources": ["/home/stephen/Apps/next-portfolio/src/pages/posts/[slug].tsx"],
    "names": [
      "imageUrlBuilder",
      "client",
      "getPostBySlug",
      "moment",
      "urlFor",
      "source",
      "image",
      "getServerSideProps",
      "context",
      "slug",
      "query",
      "data",
      "props",
      "Post",
      "title",
      "name",
      "authorImage",
      "publishedAt",
      "body",
      "format",
      "renderContent",
      "width",
      "url"
    ],
    "mappings": ";;;AAAA,OAAOA,eAAP,MAA4B,mBAA5B;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,aAAP,MAA0B,mBAA1B;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAEA,SAASC,MAAT,CAAgBC,MAAhB,EAAwB;AACtB,SAAOL,eAAe,CAACC,MAAD,CAAf,CAAwBK,KAAxB,CAA8BD,MAA9B,CAAP;AACD;;AAED,OAAO,eAAeE,kBAAf,CAAkCC,OAAlC,EAA2C;AAChD,QAAM;AAAEC,IAAAA,IAAI,GAAG;AAAT,MAAgBD,OAAO,CAACE,KAA9B;AACA,QAAMC,IAAI,GAAG,MAAMT,aAAa,CAACO,IAAD,CAAhC;AAEA,SAAO;AACLG,IAAAA,KAAK,EAAED;AADF,GAAP;AAGD;AAGD,eAAe,SAASE,IAAT,CAAcD,KAAd,EAAqB;AAClC,QAAM;AACJE,IAAAA,KADI;AAEJC,IAAAA,IAFI;AAGJC,IAAAA,WAHI;AAIJC,IAAAA,WAJI;AAKJC,IAAAA,IAAI,GAAG;AALH,MAMFN,KANJ;AAOA,SACE;AAAS,IAAA,SAAS,EAAC,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,yBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0CT,MAAM,CAACc,WAAD,CAAN,CAAoBE,MAApB,CAA2B,eAA3B,CAA1C,CADF,EAEE;AAAI,IAAA,SAAS,EAAC,kCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkDL,KAAlD,CAFF,EAGE;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMM,aAAa,CAACF,IAAD,CADnB,OAHF,EAOGF,WAAW,IACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAwC,IAAA,GAAG,EAAC,YAA5C;AAAyD,IAAA,GAAG,EAAEZ,MAAM,CAACY,WAAD,CAAN,CAAoBK,KAApB,CAA0B,GAA1B,EAA+BC,GAA/B,EAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEF;AAAM,IAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAkCP,IAAlC,CAFE,CARJ,CADF;AAgBD;AAAA",
    "sourcesContent": [
      "import imageUrlBuilder from \"@sanity/image-url\";\nimport BlockContent from \"@sanity/block-content-to-react\";\nimport client from \"../../sanity-client\";\nimport getPostBySlug from \"../../content-api\";\nimport moment from 'moment'\n\nfunction urlFor(source) {\n  return imageUrlBuilder(client).image(source);\n}\n\nexport async function getServerSideProps(context) {\n  const { slug = \"\" } = context.query;\n  const data = await getPostBySlug(slug);\n\n  return {\n    props: data,\n  };\n}\n\n\nexport default function Post(props) {\n  const {\n    title,\n    name,\n    authorImage,\n    publishedAt,\n    body = [],\n  } = props;\n  return (\n    <article className=\"p-8\">\n      <h3 className=\"font-bold text-gray-500\">{ moment(publishedAt).format('MMMM Do, YYYY') }</h3>\n      <h1 className=\"text-4xl font-bold text-gray-900\">{title}</h1>\n      <div className=\"text-xl text-gray-800\">\n          { renderContent(body) }\n        />\n      </div>\n      {authorImage && (\n        <div>\n          <img className=\"h-12 rounded shadow-xl\" alt=\"The author\" src={urlFor(authorImage).width(100).url()} />\n      <span className=\"text-center\">By {name}</span>\n        </div>\n      )}\n    </article>\n  );\n};\n\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
