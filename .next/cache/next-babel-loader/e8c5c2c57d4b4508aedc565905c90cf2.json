{
  "ast": null,
  "code": "import _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/home/stephen/Apps/next-portfolio/src/pages/posts/[slug].tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport imageUrlBuilder from \"@sanity/image-url\";\nimport BlockContent from \"@sanity/block-content-to-react\";\nimport client from \"../../sanity-client\";\nimport moment from 'moment';\n\nfunction urlFor(source) {\n  return imageUrlBuilder(client).image(source);\n}\n\nexport var __N_SSP = true;\nexport default function Post(props) {\n  var title = props.title,\n      name = props.name,\n      authorImage = props.authorImage,\n      publishedAt = props.publishedAt,\n      _props$body = props.body,\n      body = _props$body === void 0 ? [] : _props$body;\n  return __jsx(\"article\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, __jsx(\"h3\", {\n    className: \"font-bold text-gray-500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, moment(publishedAt).format('MMMM Do, YYYY')), __jsx(\"h1\", {\n    className: \"text-4xl font-bold text-gray-800\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, title), __jsx(\"div\", {\n    className: \"font-sans text-base\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, __jsx(BlockContent, _extends({\n    blocks: body,\n    imageOptions: {\n      w: 320,\n      h: 240,\n      fit: \"max\"\n    }\n  }, client.config(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }))), authorImage && __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, __jsx(\"img\", {\n    className: \"h-12 rounded shadow-xl\",\n    alt: \"The author\",\n    src: urlFor(authorImage).width(100).url(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }), __jsx(\"span\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, \"By \", name)));\n}\n_c = Post;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");",
  "map": {
    "version": 3,
    "sources": ["/home/stephen/Apps/next-portfolio/src/pages/posts/[slug].tsx"],
    "names": [
      "imageUrlBuilder",
      "BlockContent",
      "client",
      "moment",
      "urlFor",
      "source",
      "image",
      "Post",
      "props",
      "title",
      "name",
      "authorImage",
      "publishedAt",
      "body",
      "format",
      "w",
      "h",
      "fit",
      "config",
      "width",
      "url"
    ],
    "mappings": ";;;;AAAA,OAAOA,eAAP,MAA4B,mBAA5B;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AAEA,OAAOC,MAAP,MAAmB,QAAnB;;AAEA,SAASC,MAAT,CAAgBC,MAAhB,EAAwB;AACtB,SAAOL,eAAe,CAACE,MAAD,CAAf,CAAwBI,KAAxB,CAA8BD,MAA9B,CAAP;AACD;;;AAWD,eAAe,SAASE,IAAT,CAAcC,KAAd,EAAqB;AAAA,MAEhCC,KAFgC,GAO9BD,KAP8B,CAEhCC,KAFgC;AAAA,MAGhCC,IAHgC,GAO9BF,KAP8B,CAGhCE,IAHgC;AAAA,MAIhCC,WAJgC,GAO9BH,KAP8B,CAIhCG,WAJgC;AAAA,MAKhCC,WALgC,GAO9BJ,KAP8B,CAKhCI,WALgC;AAAA,oBAO9BJ,KAP8B,CAMhCK,IANgC;AAAA,MAMhCA,IANgC,4BAMzB,EANyB;AAQlC,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,yBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0CV,MAAM,CAACS,WAAD,CAAN,CAAoBE,MAApB,CAA2B,eAA3B,CAA1C,CADF,EAEE;AAAI,IAAA,SAAS,EAAC,kCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkDL,KAAlD,CAFF,EAGE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,YAAD;AACA,IAAA,MAAM,EAAEI,IADR;AAEA,IAAA,YAAY,EAAE;AAAEE,MAAAA,CAAC,EAAE,GAAL;AAAUC,MAAAA,CAAC,EAAE,GAAb;AAAkBC,MAAAA,GAAG,EAAE;AAAvB;AAFd,KAGIf,MAAM,CAACgB,MAAP,EAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CAHF,EAUGP,WAAW,IACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAwC,IAAA,GAAG,EAAC,YAA5C;AAAyD,IAAA,GAAG,EAAEP,MAAM,CAACO,WAAD,CAAN,CAAoBQ,KAApB,CAA0B,GAA1B,EAA+BC,GAA/B,EAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEF;AAAM,IAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAkCV,IAAlC,CAFE,CAXJ,CADF;AAmBD;KA3BuBH,I;AA2BvB",
    "sourcesContent": [
      "import imageUrlBuilder from \"@sanity/image-url\";\nimport BlockContent from \"@sanity/block-content-to-react\";\nimport client from \"../../sanity-client\";\nimport getPostBySlug from \"../../content-api\";\nimport moment from 'moment'\n\nfunction urlFor(source) {\n  return imageUrlBuilder(client).image(source);\n}\n\nexport async function getServerSideProps(context) {\n  const { slug = \"\" } = context.query;\n  const data = await getPostBySlug(slug);\n\n  return {\n    props: data,\n  };\n}\n\nexport default function Post(props) {\n  const {\n    title,\n    name,\n    authorImage,\n    publishedAt,\n    body = [],\n  } = props;\n  return (\n    <article>\n      <h3 className=\"font-bold text-gray-500\">{ moment(publishedAt).format('MMMM Do, YYYY') }</h3>\n      <h1 className=\"text-4xl font-bold text-gray-800\">{title}</h1>\n      <div className=\"font-sans text-base\">\n        <BlockContent\n        blocks={body}\n        imageOptions={{ w: 320, h: 240, fit: \"max\" }}\n        {...client.config()}\n        />\n      </div>\n      {authorImage && (\n        <div>\n          <img className=\"h-12 rounded shadow-xl\" alt=\"The author\" src={urlFor(authorImage).width(100).url()} />\n      <span className=\"text-center\">By {name}</span>\n        </div>\n      )}\n    </article>\n  );\n};\n\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
