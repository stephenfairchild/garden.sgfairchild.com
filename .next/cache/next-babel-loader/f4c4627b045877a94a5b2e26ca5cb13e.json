{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/home/stephen/Apps/next-portfolio/src/render-body-content.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport BlockContent from \"@sanity/block-content-to-react\";\nimport client from \"./sanity-client\";\nexport default function RenderBodyContent(body) {\n  var _this = this;\n\n  var serializers = {\n    list: function list(props) {\n      return __jsx(\"ul\", {\n        className: \"pt-2 pl-10 list-disc\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 6,\n          columnNumber: 24\n        }\n      }, props.children);\n    },\n    types: {\n      block: function block(props) {\n        switch (props.node.style) {\n          case \"h1\":\n            return __jsx(\"h1\", {\n              className: \"\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 11,\n                columnNumber: 32\n              }\n            }, props.children);\n\n          case \"blockquote\":\n            return __jsx(\"blockquote\", {\n              className: \"\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 14,\n                columnNumber: 29\n              }\n            }, props.children);\n\n          default:\n            return props.children;\n        }\n      }\n    }\n  };\n  return __jsx(BlockContent, _extends({\n    serializers: serializers,\n    blocks: body,\n    imageOptions: {\n      w: 320,\n      h: 240,\n      fit: \"max\"\n    }\n  }, client.config(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }));\n}\n_c = RenderBodyContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"RenderBodyContent\");","map":{"version":3,"sources":["/home/stephen/Apps/next-portfolio/src/render-body-content.jsx"],"names":["BlockContent","client","RenderBodyContent","body","serializers","list","props","children","types","block","node","style","w","h","fit","config"],"mappings":";;;;AAAA,OAAOA,YAAP,MAAyB,gCAAzB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AAEA,eAAe,SAASC,iBAAT,CAA2BC,IAA3B,EAAiC;AAAA;;AAC5C,MAAMC,WAAW,GAAG;AAChBC,IAAAA,IAAI,EAAE,cAAAC,KAAK;AAAA,aAAI;AAAI,QAAA,SAAS,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsCA,KAAK,CAACC,QAA5C,CAAJ;AAAA,KADK;AAEhBC,IAAAA,KAAK,EAAE;AACHC,MAAAA,KADG,iBACGH,KADH,EACU;AACT,gBAAQA,KAAK,CAACI,IAAN,CAAWC,KAAnB;AACI,eAAK,IAAL;AACI,mBAAO;AAAI,cAAA,SAAS,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAkBL,KAAK,CAACC,QAAxB,CAAP;;AACJ,eAAK,YAAL;AACI,mBACI;AAAY,cAAA,SAAS,EAAC,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACKD,KAAK,CAACC,QADX,CADJ;;AAMJ;AACI,mBAAOD,KAAK,CAACC,QAAb;AAXR;AAaH;AAfE;AAFS,GAApB;AAqBA,SACI,MAAC,YAAD;AACI,IAAA,WAAW,EAAEH,WADjB;AAEI,IAAA,MAAM,EAAED,IAFZ;AAGI,IAAA,YAAY,EAAE;AAAES,MAAAA,CAAC,EAAE,GAAL;AAAUC,MAAAA,CAAC,EAAE,GAAb;AAAkBC,MAAAA,GAAG,EAAE;AAAvB;AAHlB,KAIQb,MAAM,CAACc,MAAP,EAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ;AAQH;KA9BuBb,iB","sourcesContent":["import BlockContent from \"@sanity/block-content-to-react\";\nimport client from \"./sanity-client\";\n\nexport default function RenderBodyContent(body) {\n    const serializers = {\n        list: props => <ul className=\"pt-2 pl-10 list-disc\">{props.children}</ul>,\n        types: {\n            block(props) {\n                switch (props.node.style) {\n                    case \"h1\":\n                        return <h1 className=\"\">{props.children}</h1>;\n                    case \"blockquote\":\n                        return (\n                            <blockquote className=\"\">\n                                {props.children}\n                            </blockquote>\n                        );\n\n                    default:\n                        return props.children;\n                }\n            }\n        }\n    };\n\n    return (\n        <BlockContent\n            serializers={serializers}\n            blocks={body}\n            imageOptions={{ w: 320, h: 240, fit: \"max\" }}\n            {...client.config()}\n        />\n    );\n}\n"]},"metadata":{},"sourceType":"module"}