{"ast":null,"code":"var _jsxFileName = \"/home/stephen/Apps/next-portfolio/src/pages/posts/[slug].jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport imageUrlBuilder from \"@sanity/image-url\";\nimport client from \"../../sanity-client\";\nimport moment from \"moment\";\nimport renderBodyContent from \"../../render-body-content\";\nimport Navbar from \"../../components/navbar\";\n\nfunction urlFor(source) {\n  return imageUrlBuilder(client).image(source);\n}\n\nexport var __N_SSG = true;\nexport default function Post(props) {\n  var title = props.title,\n      publishedAt = props.publishedAt,\n      _props$body = props.body,\n      body = _props$body === void 0 ? [] : _props$body;\n  return __jsx(React.Fragment, null, __jsx(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }), __jsx(\"article\", {\n    className: \"p-8 mx-auto max-w-6xl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, __jsx(\"h3\", {\n    className: \"font-bold text-gray-500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, moment(publishedAt).format(\"MMMM Do, YYYY\")), __jsx(\"h1\", {\n    className: \"text-4xl font-bold text-gray-800\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, title), __jsx(\"div\", {\n    className: \"text-xl text-gray-700\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, renderBodyContent(body))));\n}\n_c = Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/home/stephen/Apps/next-portfolio/src/pages/posts/[slug].jsx"],"names":["imageUrlBuilder","client","moment","renderBodyContent","Navbar","urlFor","source","image","Post","props","title","publishedAt","body","format"],"mappings":";;;AAAA,OAAOA,eAAP,MAA4B,mBAA5B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AAEA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,iBAAP,MAA8B,2BAA9B;AACA,OAAOC,MAAP,MAAmB,yBAAnB;;AAEA,SAASC,MAAT,CAAgBC,MAAhB,EAAwB;AACpB,SAAON,eAAe,CAACC,MAAD,CAAf,CAAwBM,KAAxB,CAA8BD,MAA9B,CAAP;AACH;;;AAoBD,eAAe,SAASE,IAAT,CAAcC,KAAd,EAAqB;AAAA,MACxBC,KADwB,GACUD,KADV,CACxBC,KADwB;AAAA,MACjBC,WADiB,GACUF,KADV,CACjBE,WADiB;AAAA,oBACUF,KADV,CACJG,IADI;AAAA,MACJA,IADI,4BACG,EADH;AAEhC,SACI,4BACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAS,IAAA,SAAS,EAAC,uBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,yBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKV,MAAM,CAACS,WAAD,CAAN,CAAoBE,MAApB,CAA2B,eAA3B,CADL,CADJ,EAII;AAAI,IAAA,SAAS,EAAC,kCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkDH,KAAlD,CAJJ,EAKI;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKP,iBAAiB,CAACS,IAAD,CADtB,CALJ,CAFJ,CADJ;AAcH;KAhBuBJ,I","sourcesContent":["import imageUrlBuilder from \"@sanity/image-url\";\nimport client from \"../../sanity-client\";\nimport { getPostBySlug, getAllPosts } from \"../../content-api\";\nimport moment from \"moment\";\nimport renderBodyContent from \"../../render-body-content\";\nimport Navbar from \"../../components/navbar\";\n\nfunction urlFor(source) {\n    return imageUrlBuilder(client).image(source);\n}\n\nexport async function getStaticProps(context) {\n    const data = await getPostBySlug(context.params.slug);\n\n    return {\n        props: data\n    };\n}\n\nexport async function getStaticPaths() {\n    const posts = await getAllPosts();\n\n    const paths = posts.map(post => ({\n        params: { slug: post.slug.current }\n    }));\n\n    return { paths, fallback: false };\n}\n\nexport default function Post(props) {\n    const { title, publishedAt, body = [] } = props;\n    return (\n        <>\n            <Navbar />\n            <article className=\"p-8 mx-auto max-w-6xl\">\n                <h3 className=\"font-bold text-gray-500\">\n                    {moment(publishedAt).format(\"MMMM Do, YYYY\")}\n                </h3>\n                <h1 className=\"text-4xl font-bold text-gray-800\">{title}</h1>\n                <div className=\"text-xl text-gray-700\">\n                    {renderBodyContent(body)}\n                </div>\n            </article>\n        </>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}