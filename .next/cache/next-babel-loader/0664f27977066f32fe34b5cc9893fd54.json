{"ast":null,"code":"var _jsxFileName = \"/home/stephen/Apps/next-portfolio/src/pages/posts/[slug].jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport imageUrlBuilder from \"@sanity/image-url\";\nimport client from \"../../sanity-client\";\nimport moment from \"moment\";\nimport renderBodyContent from \"../../render-body-content\";\n\nfunction urlFor(source) {\n  return imageUrlBuilder(client).image(source);\n}\n\nexport var __N_SSP = true;\nexport default function Post(props) {\n  var title = props.title,\n      name = props.name,\n      authorImage = props.authorImage,\n      publishedAt = props.publishedAt,\n      _props$body = props.body,\n      body = _props$body === void 0 ? [] : _props$body;\n  return __jsx(\"article\", {\n    className: \"bg-gray-300 p-8 mx-auto max-w-3xl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, __jsx(\"h3\", {\n    className: \"font-bold text-gray-500\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, moment(publishedAt).format(\"MMMM Do, YYYY\")), __jsx(\"h1\", {\n    className: \"text-4xl font-bold text-gray-900\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, title), __jsx(\"div\", {\n    className: \"text-xl text-gray-800\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, renderBodyContent(body)), authorImage && __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, __jsx(\"img\", {\n    className: \"h-12 rounded shadow-xl\",\n    alt: \"The author\",\n    src: urlFor(authorImage).width(100).url(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  }), __jsx(\"span\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, \"By \", name)));\n}\n_c = Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/home/stephen/Apps/next-portfolio/src/pages/posts/[slug].jsx"],"names":["imageUrlBuilder","client","moment","renderBodyContent","urlFor","source","image","Post","props","title","name","authorImage","publishedAt","body","format","width","url"],"mappings":";;;AAAA,OAAOA,eAAP,MAA4B,mBAA5B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AAEA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,iBAAP,MAA8B,2BAA9B;;AAEA,SAASC,MAAT,CAAgBC,MAAhB,EAAwB;AACpB,SAAOL,eAAe,CAACC,MAAD,CAAf,CAAwBK,KAAxB,CAA8BD,MAA9B,CAAP;AACH;;;AAWD,eAAe,SAASE,IAAT,CAAcC,KAAd,EAAqB;AAAA,MACxBC,KADwB,GAC6BD,KAD7B,CACxBC,KADwB;AAAA,MACjBC,IADiB,GAC6BF,KAD7B,CACjBE,IADiB;AAAA,MACXC,WADW,GAC6BH,KAD7B,CACXG,WADW;AAAA,MACEC,WADF,GAC6BJ,KAD7B,CACEI,WADF;AAAA,oBAC6BJ,KAD7B,CACeK,IADf;AAAA,MACeA,IADf,4BACsB,EADtB;AAEhC,SACI;AAAS,IAAA,SAAS,EAAC,mCAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,SAAS,EAAC,yBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKX,MAAM,CAACU,WAAD,CAAN,CAAoBE,MAApB,CAA2B,eAA3B,CADL,CADJ,EAII;AAAI,IAAA,SAAS,EAAC,kCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkDL,KAAlD,CAJJ,EAKI;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKN,iBAAiB,CAACU,IAAD,CADtB,CALJ,EAQKF,WAAW,IACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,SAAS,EAAC,wBADd;AAEI,IAAA,GAAG,EAAC,YAFR;AAGI,IAAA,GAAG,EAAEP,MAAM,CAACO,WAAD,CAAN,CAAoBI,KAApB,CAA0B,GAA1B,EAA+BC,GAA/B,EAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAMI;AAAM,IAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAkCN,IAAlC,CANJ,CATR,CADJ;AAqBH;KAvBuBH,I","sourcesContent":["import imageUrlBuilder from \"@sanity/image-url\";\nimport client from \"../../sanity-client\";\nimport getPostBySlug from \"../../content-api\";\nimport moment from \"moment\";\nimport renderBodyContent from \"../../render-body-content\";\n\nfunction urlFor(source) {\n    return imageUrlBuilder(client).image(source);\n}\n\nexport async function getServerSideProps(context) {\n    const { slug = \"\" } = context.query;\n    const data = await getPostBySlug(slug);\n\n    return {\n        props: data\n    };\n}\n\nexport default function Post(props) {\n    const { title, name, authorImage, publishedAt, body = [] } = props;\n    return (\n        <article className=\"bg-gray-300 p-8 mx-auto max-w-3xl\">\n            <h3 className=\"font-bold text-gray-500\">\n                {moment(publishedAt).format(\"MMMM Do, YYYY\")}\n            </h3>\n            <h1 className=\"text-4xl font-bold text-gray-900\">{title}</h1>\n            <div className=\"text-xl text-gray-800\">\n                {renderBodyContent(body)}\n            </div>\n            {authorImage && (\n                <div>\n                    <img\n                        className=\"h-12 rounded shadow-xl\"\n                        alt=\"The author\"\n                        src={urlFor(authorImage).width(100).url()}\n                    />\n                    <span className=\"text-center\">By {name}</span>\n                </div>\n            )}\n        </article>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}