{
  "ast": null,
  "code": "import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/home/stephen/Apps/next-portfolio/pages/post/[slug].jsx\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n// [slug].js\nimport client from \"../../client\";\n\nvar Post = function Post(props) {\n  var _props$title = props.title,\n      title = _props$title === void 0 ? \"Missing title\" : _props$title,\n      _props$name = props.name,\n      name = _props$name === void 0 ? \"Missing name\" : _props$name;\n  return __jsx(\"article\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }\n  }, title), __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  }, \"By \", name));\n};\n\n_c = Post;\n\nPost.getInitialProps = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n    var _context$query$slug, slug;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            // It's important to default the slug so that it doesn't return \"undefined\"\n            _context$query$slug = context.query.slug, slug = _context$query$slug === void 0 ? \"\" : _context$query$slug;\n            _context.next = 3;\n            return client.fetch(\"\\n    *[_type == \\\"post\\\" && slug.current == $slug][0]{title, \\\"name\\\": author->name}\\n  \", {\n              slug: slug\n            });\n\n          case 3:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");",
  "map": {
    "version": 3,
    "sources": ["/home/stephen/Apps/next-portfolio/pages/post/[slug].jsx"],
    "names": [
      "client",
      "Post",
      "props",
      "title",
      "name",
      "getInitialProps",
      "context",
      "query",
      "slug",
      "fetch"
    ],
    "mappings": ";;;;;;;;AAAA;AAEA,OAAOA,MAAP,MAAmB,cAAnB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAAAC,KAAK,EAAI;AAAA,qBACyCA,KADzC,CACVC,KADU;AAAA,MACVA,KADU,6BACF,eADE;AAAA,oBACyCD,KADzC,CACeE,IADf;AAAA,MACeA,IADf,4BACsB,cADtB;AAElB,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,KAAL,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAUC,IAAV,CAFJ,CADJ;AAMH,CARD;;KAAMH,I;;AAUNA,IAAI,CAACI,eAAL;AAAA,sEAAuB,iBAAgBC,OAAhB;AAAA;;AAAA;AAAA;AAAA;AAAA;AACnB;AADmB,kCAEGA,OAAO,CAACC,KAFX,CAEXC,IAFW,EAEXA,IAFW,oCAEJ,EAFI;AAAA;AAAA,mBAGNR,MAAM,CAACS,KAAP,8FAIT;AAAED,cAAAA,IAAI,EAAJA;AAAF,aAJS,CAHM;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAAA;AAAA;AAAA;AAAA;;AAWA,eAAeP,IAAf",
    "sourcesContent": [
      "// [slug].js\n\nimport client from \"../../client\";\n\nconst Post = props => {\n    const { title = \"Missing title\", name = \"Missing name\" } = props;\n    return (\n        <article>\n            <h1>{title}</h1>\n            <span>By {name}</span>\n        </article>\n    );\n};\n\nPost.getInitialProps = async function (context) {\n    // It's important to default the slug so that it doesn't return \"undefined\"\n    const { slug = \"\" } = context.query;\n    return await client.fetch(\n        `\n    *[_type == \"post\" && slug.current == $slug][0]{title, \"name\": author->name}\n  `,\n        { slug }\n    );\n};\n\nexport default Post;\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
