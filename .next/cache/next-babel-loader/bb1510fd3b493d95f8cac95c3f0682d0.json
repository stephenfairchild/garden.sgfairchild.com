{"ast":null,"code":"var _jsxFileName = \"/home/stephen/Apps/next-portfolio/src/pages/category/[category].jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Head from \"next/head\";\nimport { getAllPostsInCategory, getAllCategories } from \"../../content-api\";\nimport Navbar from \"../../components/navbar\";\nimport ListOfPosts from \"../../components/ListOfPosts\";\nimport PhotoPosts from \"../../components/PhotoPosts\";\nexport async function getStaticProps(context) {\n  const data = await getAllPostsInCategory(context.params.category);\n  return {\n    props: {\n      posts: data,\n      category: context.params.category\n    }\n  };\n}\nexport async function getStaticPaths() {\n  const categories = await getAllCategories();\n  const paths = categories.map(category => ({\n    params: {\n      category: category.slug.current\n    }\n  }));\n  return {\n    paths,\n    fallback: false\n  };\n}\nexport default function Category(props) {\n  const {\n    posts,\n    category\n  } = props;\n\n  const displayPosts = () => {\n    if (category.type.includes(\"list\")) {\n      return __jsx(ListOfPosts, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 20\n        }\n      });\n    } else if (category.type.includes(\"photo\")) {\n      return __jsx(PhotoPosts, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 20\n        }\n      });\n    }\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Navbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }), displayPosts());\n}","map":{"version":3,"sources":["/home/stephen/Apps/next-portfolio/src/pages/category/[category].jsx"],"names":["Head","getAllPostsInCategory","getAllCategories","Navbar","ListOfPosts","PhotoPosts","getStaticProps","context","data","params","category","props","posts","getStaticPaths","categories","paths","map","slug","current","fallback","Category","displayPosts","type","includes"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,qBAAT,EAAgCC,gBAAhC,QAAwD,mBAAxD;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AAEA,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC1C,QAAMC,IAAI,GAAG,MAAMP,qBAAqB,CAACM,OAAO,CAACE,MAAR,CAAeC,QAAhB,CAAxC;AAEA,SAAO;AACHC,IAAAA,KAAK,EAAE;AACHC,MAAAA,KAAK,EAAEJ,IADJ;AAEHE,MAAAA,QAAQ,EAAEH,OAAO,CAACE,MAAR,CAAeC;AAFtB;AADJ,GAAP;AAMH;AAED,OAAO,eAAeG,cAAf,GAAgC;AACnC,QAAMC,UAAU,GAAG,MAAMZ,gBAAgB,EAAzC;AACA,QAAMa,KAAK,GAAGD,UAAU,CAACE,GAAX,CAAeN,QAAQ,KAAK;AACtCD,IAAAA,MAAM,EAAE;AAAEC,MAAAA,QAAQ,EAAEA,QAAQ,CAACO,IAAT,CAAcC;AAA1B;AAD8B,GAAL,CAAvB,CAAd;AAIA,SAAO;AAAEH,IAAAA,KAAF;AAASI,IAAAA,QAAQ,EAAE;AAAnB,GAAP;AACH;AAED,eAAe,SAASC,QAAT,CAAkBT,KAAlB,EAAyB;AACpC,QAAM;AAAEC,IAAAA,KAAF;AAASF,IAAAA;AAAT,MAAsBC,KAA5B;;AAEA,QAAMU,YAAY,GAAG,MAAM;AACvB,QAAIX,QAAQ,CAACY,IAAT,CAAcC,QAAd,CAAuB,MAAvB,CAAJ,EAAoC;AAChC,aAAO,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAFD,MAEO,IAAIb,QAAQ,CAACY,IAAT,CAAcC,QAAd,CAAuB,OAAvB,CAAJ,EAAqC;AACxC,aAAO,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;AACJ,GAND;;AAQA,SACI,4BACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEKF,YAAY,EAFjB,CADJ;AAMH","sourcesContent":["import Head from \"next/head\";\nimport { getAllPostsInCategory, getAllCategories } from \"../../content-api\";\nimport Navbar from \"../../components/navbar\";\nimport ListOfPosts from \"../../components/ListOfPosts\";\nimport PhotoPosts from \"../../components/PhotoPosts\";\n\nexport async function getStaticProps(context) {\n    const data = await getAllPostsInCategory(context.params.category);\n\n    return {\n        props: {\n            posts: data,\n            category: context.params.category\n        }\n    };\n}\n\nexport async function getStaticPaths() {\n    const categories = await getAllCategories();\n    const paths = categories.map(category => ({\n        params: { category: category.slug.current }\n    }));\n\n    return { paths, fallback: false };\n}\n\nexport default function Category(props) {\n    const { posts, category } = props;\n\n    const displayPosts = () => {\n        if (category.type.includes(\"list\")) {\n            return <ListOfPosts />;\n        } else if (category.type.includes(\"photo\")) {\n            return <PhotoPosts />;\n        }\n    };\n\n    return (\n        <>\n            <Navbar />\n            {displayPosts()}\n        </>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}