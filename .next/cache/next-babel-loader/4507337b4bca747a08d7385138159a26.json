{
  "ast": null,
  "code": "var _jsxFileName = \"/home/stephen/Apps/next-portfolio/pages/post/[slug].jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n// [slug].js\nimport groq from \"groq\";\nimport client from \"../../client\";\n\nconst Post = props => {\n  const {\n    title = \"Missing title\",\n    name = \"Missing name\",\n    categories\n  } = props;\n  return __jsx(\"article\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, title), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, \"By \", name), categories && __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }\n  }, \"Posted in\", categories.map(category => __jsx(\"li\", {\n    key: category,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 25\n    }\n  }, category))));\n};\n\nconst query = groq`*[_type == \"post\" && slug.current == $slug][0]{\n  title,\n  \"name\": author->name,\n  \"categories\": categories[]->title\n}`;\n\nPost.getInitialProps = async function (context) {\n  // It's important to default the slug so that it doesn't return \"undefined\"\n  const {\n    slug = \"\"\n  } = context.query;\n  return await client.fetch(query, {\n    slug\n  });\n};\n\nexport default Post; // [slug].js",
  "map": {
    "version": 3,
    "sources": ["/home/stephen/Apps/next-portfolio/pages/post/[slug].jsx"],
    "names": [
      "groq",
      "client",
      "Post",
      "props",
      "title",
      "name",
      "categories",
      "map",
      "category",
      "query",
      "getInitialProps",
      "context",
      "slug",
      "fetch"
    ],
    "mappings": ";;;AAAA;AAEA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAOC,MAAP,MAAmB,cAAnB;;AAEA,MAAMC,IAAI,GAAGC,KAAK,IAAI;AAClB,QAAM;AACFC,IAAAA,KAAK,GAAG,eADN;AAEFC,IAAAA,IAAI,GAAG,cAFL;AAGFC,IAAAA;AAHE,MAIFH,KAJJ;AAKA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKC,KAAL,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAUC,IAAV,CAFJ,EAGKC,UAAU,IACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEKA,UAAU,CAACC,GAAX,CAAeC,QAAQ,IACpB;AAAI,IAAA,GAAG,EAAEA,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoBA,QAApB,CADH,CAFL,CAJR,CADJ;AAcH,CApBD;;AAsBA,MAAMC,KAAK,GAAGT,IAAK;;;;EAAnB;;AAMAE,IAAI,CAACQ,eAAL,GAAuB,gBAAgBC,OAAhB,EAAyB;AAC5C;AACA,QAAM;AAAEC,IAAAA,IAAI,GAAG;AAAT,MAAgBD,OAAO,CAACF,KAA9B;AACA,SAAO,MAAMR,MAAM,CAACY,KAAP,CAAaJ,KAAb,EAAoB;AAAEG,IAAAA;AAAF,GAApB,CAAb;AACH,CAJD;;AAMA,eAAeV,IAAf,C,CAAqB",
    "sourcesContent": [
      "// [slug].js\n\nimport groq from \"groq\";\nimport client from \"../../client\";\n\nconst Post = props => {\n    const {\n        title = \"Missing title\",\n        name = \"Missing name\",\n        categories\n    } = props;\n    return (\n        <article>\n            <h1>{title}</h1>\n            <span>By {name}</span>\n            {categories && (\n                <ul>\n                    Posted in\n                    {categories.map(category => (\n                        <li key={category}>{category}</li>\n                    ))}\n                </ul>\n            )}\n        </article>\n    );\n};\n\nconst query = groq`*[_type == \"post\" && slug.current == $slug][0]{\n  title,\n  \"name\": author->name,\n  \"categories\": categories[]->title\n}`;\n\nPost.getInitialProps = async function (context) {\n    // It's important to default the slug so that it doesn't return \"undefined\"\n    const { slug = \"\" } = context.query;\n    return await client.fetch(query, { slug });\n};\n\nexport default Post; // [slug].js\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
