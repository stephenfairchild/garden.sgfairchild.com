{
  "ast": null,
  "code": "var _jsxFileName = \"/home/stephen/Apps/next-portfolio/src/pages/posts/[slug].tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport imageUrlBuilder from \"@sanity/image-url\";\nimport BlockContent from \"@sanity/block-content-to-react\";\nimport client from \"../../sanity-client\";\nimport getPostBySlug from \"../../content-api\";\n\nfunction urlFor(source) {\n  return imageUrlBuilder(client).image(source);\n}\n\nconst Post = props => {\n  const {\n    title = \"Missing title\",\n    name = \"Missing name\",\n    categories,\n    authorImage,\n    body = []\n  } = props;\n  return __jsx(\"article\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, title), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, \"By \", name), categories && __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, \"Posted in\", categories.map(category => __jsx(\"li\", {\n    key: category,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, category))), authorImage && __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, __jsx(\"img\", {\n    alt: \"The author\",\n    src: urlFor(authorImage).width(50).url(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  })), __jsx(BlockContent, _extends({\n    blocks: body,\n    imageOptions: {\n      w: 320,\n      h: 240,\n      fit: \"max\"\n    }\n  }, client.config(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  })));\n};\n\nexport async function getServerSideProps(context) {\n  const {\n    slug = \"\"\n  } = context.query;\n  const data = await getPostBySlug(slug);\n  return {\n    props: data\n  };\n}\nexport default Post;",
  "map": {
    "version": 3,
    "sources": ["/home/stephen/Apps/next-portfolio/src/pages/posts/[slug].tsx"],
    "names": [
      "imageUrlBuilder",
      "BlockContent",
      "client",
      "getPostBySlug",
      "urlFor",
      "source",
      "image",
      "Post",
      "props",
      "title",
      "name",
      "categories",
      "authorImage",
      "body",
      "map",
      "category",
      "width",
      "url",
      "w",
      "h",
      "fit",
      "config",
      "getServerSideProps",
      "context",
      "slug",
      "query",
      "data"
    ],
    "mappings": ";;;;;;AAAA,OAAOA,eAAP,MAA4B,mBAA5B;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,aAAP,MAA0B,mBAA1B;;AAEA,SAASC,MAAT,CAAgBC,MAAhB,EAAwB;AACtB,SAAOL,eAAe,CAACE,MAAD,CAAf,CAAwBI,KAAxB,CAA8BD,MAA9B,CAAP;AACD;;AAED,MAAME,IAAI,GAAIC,KAAD,IAAW;AACtB,QAAM;AACJC,IAAAA,KAAK,GAAG,eADJ;AAEJC,IAAAA,IAAI,GAAG,cAFH;AAGJC,IAAAA,UAHI;AAIJC,IAAAA,WAJI;AAKJC,IAAAA,IAAI,GAAG;AALH,MAMFL,KANJ;AAOA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKC,KAAL,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAUC,IAAV,CAFF,EAGGC,UAAU,IACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEGA,UAAU,CAACG,GAAX,CAAgBC,QAAD,IACd;AAAI,IAAA,GAAG,EAAEA,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoBA,QAApB,CADD,CAFH,CAJJ,EAWGH,WAAW,IACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAC,YAAT;AAAsB,IAAA,GAAG,EAAER,MAAM,CAACQ,WAAD,CAAN,CAAoBI,KAApB,CAA0B,EAA1B,EAA8BC,GAA9B,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAZJ,EAgBE,MAAC,YAAD;AACE,IAAA,MAAM,EAAEJ,IADV;AAEE,IAAA,YAAY,EAAE;AAAEK,MAAAA,CAAC,EAAE,GAAL;AAAUC,MAAAA,CAAC,EAAE,GAAb;AAAkBC,MAAAA,GAAG,EAAE;AAAvB;AAFhB,KAGMlB,MAAM,CAACmB,MAAP,EAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAhBF,CADF;AAwBD,CAhCD;;AAkCA,OAAO,eAAeC,kBAAf,CAAkCC,OAAlC,EAA2C;AAChD,QAAM;AAAEC,IAAAA,IAAI,GAAG;AAAT,MAAgBD,OAAO,CAACE,KAA9B;AACA,QAAMC,IAAI,GAAG,MAAMvB,aAAa,CAACqB,IAAD,CAAhC;AAEA,SAAO;AACLhB,IAAAA,KAAK,EAAEkB;AADF,GAAP;AAGD;AAED,eAAenB,IAAf",
    "sourcesContent": [
      "import imageUrlBuilder from \"@sanity/image-url\";\nimport BlockContent from \"@sanity/block-content-to-react\";\nimport client from \"../../sanity-client\";\nimport getPostBySlug from \"../../content-api\";\n\nfunction urlFor(source) {\n  return imageUrlBuilder(client).image(source);\n}\n\nconst Post = (props) => {\n  const {\n    title = \"Missing title\",\n    name = \"Missing name\",\n    categories,\n    authorImage,\n    body = [],\n  } = props;\n  return (\n    <article>\n      <h1>{title}</h1>\n      <span>By {name}</span>\n      {categories && (\n        <ul>\n          Posted in\n          {categories.map((category) => (\n            <li key={category}>{category}</li>\n          ))}\n        </ul>\n      )}\n      {authorImage && (\n        <div>\n          <img alt=\"The author\" src={urlFor(authorImage).width(50).url()} />\n        </div>\n      )}\n      <BlockContent\n        blocks={body}\n        imageOptions={{ w: 320, h: 240, fit: \"max\" }}\n        {...client.config()}\n      />\n    </article>\n  );\n};\n\nexport async function getServerSideProps(context) {\n  const { slug = \"\" } = context.query;\n  const data = await getPostBySlug(slug);\n\n  return {\n    props: data,\n  };\n}\n\nexport default Post;\n"
    ]
  },
  "metadata": {},
  "sourceType": "module"
}
